/* dashboard.style.css */
body { 
    font-family: Arial, sans-serif; 
    margin: 20px; 
    background-color: #f4f4f4; 
    color: #333; 
}
.container { 
    background: white; 
    padding: 20px; 
    border-radius: 8px; 
    box-shadow: 0 0 10px rgba(0,0,0,0.1); 
    max-width: 700px; 
    margin: auto; 
}
h1, h2 { 
    color: #555; 
}
label { 
    display: block; 
    margin-bottom: 5px; 
    font-weight: bold; 
}
input[type="text"], 
input[type="password"], 
textarea { 
    width: 100%; 
    padding: 10px; 
    margin-bottom: 10px; 
    border: 1px solid #ddd; 
    border-radius: 4px; 
    box-sizing: border-box; 
}
textarea { 
    min-height: 60px; 
    resize: vertical; 
}

/* --- Button Grouping and Alignment --- */
.overlay-controls {
    display: flex; /* Use flexbox for the entire group of controls for an overlay */
    align-items: center; /* Vertically align items in the middle */
    flex-wrap: wrap; /* Allow buttons to wrap if space is tight, though unlikely here */
    margin-bottom: 10px; /* Space below each control group */
}

.overlay-controls .status-light-container {
    display: inline-flex; 
    align-items: center; 
    margin-right: 10px; /* Space between light+show_button and next button */
}

.overlay-controls button { 
    color: white; 
    padding: 10px 15px; 
    border: none; 
    border-radius: 4px; 
    cursor: pointer; 
    margin-right: 5px; 
    /* margin-bottom is handled by .overlay-controls or .fullscreen-controls */
    font-size: 16px; 
    transition: background-color 0.2s ease, opacity 0.2s ease; 
}
/* Remove bottom margin from buttons directly inside .overlay-controls 
   if .overlay-controls itself provides the bottom margin for the group */
.overlay-controls > button {
    margin-bottom: 0; 
}
.overlay-controls .status-light-container button {
    margin-bottom: 0; /* Ensure button inside status-light-container also has no bottom margin */
}


button:hover { 
    opacity: 0.9; 
}
button.primary { background-color: #007bff; }
button.secondary { background-color: #6c757d; }
button.alert { background-color: #dc3545; }
button.info { background-color: #17a2b8; }
button.success { background-color: #28a745; }
button.warning { background-color: #ffc107; color: black !important; } 
button.dark-green { background-color: #00695c; }

.status-light {
    width: 18px;      
    height: 18px;     
    border-radius: 50%; 
    margin-right: 8px; 
    display: inline-block;
    /* vertical-align: middle; /* Not strictly needed with flex align-items */
    border: 1px solid rgba(0,0,0,0.2); 
    box-shadow: 0 0 3px rgba(0,0,0,0.2); 
    transition: background-color 0.3s ease, box-shadow 0.3s ease;
    flex-shrink: 0; /* Prevent light from shrinking if space is tight */
}
.status-light.visible { background-color: #28a745; box-shadow: 0 0 6px #28a745; }
.status-light.hidden { background-color: #dc3545; box-shadow: 0 0 6px #dc3545; }
.status-light.error { background-color: #ffc107; box-shadow: 0 0 6px #ffc107; }
.status-light.unknown { background-color: #6c757d; }

.control-group { 
    margin-bottom: 25px; 
    padding-bottom: 20px; 
    border-bottom: 1px solid #eee; 
}
.control-group:last-child { 
    border-bottom: none; 
}

/* Specific adjustments for fullscreen controls if needed, 
   but the generic .overlay-controls should handle most cases.
   The <br> might still be useful here for explicit line breaking. */
.fullscreen-controls .overlay-controls {
    margin-bottom: 5px; 
}


.input-group { 
    margin-bottom: 10px; 
}
#status-footer-log { 
    margin-top: 20px; 
    padding: 10px; 
    background-color: #e9ecef; 
    border-radius: 4px; 
}
